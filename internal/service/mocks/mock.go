// Code generated by MockGen. DO NOT EDIT.
// Source: user_service.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"
	model "user-service/internal/model"

	gomock "github.com/golang/mock/gomock"
	decimal "github.com/shopspring/decimal"
)

// Mockstorage is a mock of storage interface.
type Mockstorage struct {
	ctrl     *gomock.Controller
	recorder *MockstorageMockRecorder
}

// MockstorageMockRecorder is the mock recorder for Mockstorage.
type MockstorageMockRecorder struct {
	mock *Mockstorage
}

// NewMockstorage creates a new mock instance.
func NewMockstorage(ctrl *gomock.Controller) *Mockstorage {
	mock := &Mockstorage{ctrl: ctrl}
	mock.recorder = &MockstorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockstorage) EXPECT() *MockstorageMockRecorder {
	return m.recorder
}

// Payment mocks base method.
func (m *Mockstorage) Payment(ctx context.Context, senderID, recipientID int, amount decimal.Decimal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Payment", ctx, senderID, recipientID, amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// Payment indicates an expected call of Payment.
func (mr *MockstorageMockRecorder) Payment(ctx, senderID, recipientID, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Payment", reflect.TypeOf((*Mockstorage)(nil).Payment), ctx, senderID, recipientID, amount)
}

// RecentOperations mocks base method.
func (m *Mockstorage) RecentOperations(ctx context.Context, id int) ([]model.Operation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RecentOperations", ctx, id)
	ret0, _ := ret[0].([]model.Operation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RecentOperations indicates an expected call of RecentOperations.
func (mr *MockstorageMockRecorder) RecentOperations(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RecentOperations", reflect.TypeOf((*Mockstorage)(nil).RecentOperations), ctx, id)
}

// ReplenishmentBalance mocks base method.
func (m *Mockstorage) ReplenishmentBalance(ctx context.Context, id int, amount decimal.Decimal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReplenishmentBalance", ctx, id, amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReplenishmentBalance indicates an expected call of ReplenishmentBalance.
func (mr *MockstorageMockRecorder) ReplenishmentBalance(ctx, id, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReplenishmentBalance", reflect.TypeOf((*Mockstorage)(nil).ReplenishmentBalance), ctx, id, amount)
}
